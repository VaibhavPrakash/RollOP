/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../../../common";

export declare namespace CheckBalanceHigh {
  export type ParamsStruct = {
    target: PromiseOrValue<string>;
    threshold: PromiseOrValue<BigNumberish>;
  };

  export type ParamsStructOutput = [string, BigNumber] & {
    target: string;
    threshold: BigNumber;
  };
}

export interface CheckBalanceHighInterface extends utils.Interface {
  functions: {
    "check(bytes)": FunctionFragment;
  };

  getFunction(nameOrSignatureOrTopic: "check"): FunctionFragment;

  encodeFunctionData(
    functionFragment: "check",
    values: [PromiseOrValue<BytesLike>]
  ): string;

  decodeFunctionResult(functionFragment: "check", data: BytesLike): Result;

  events: {
    "_EventToExposeStructInABI__Params(tuple)": EventFragment;
  };

  getEvent(
    nameOrSignatureOrTopic: "_EventToExposeStructInABI__Params"
  ): EventFragment;
}

export interface _EventToExposeStructInABI__ParamsEventObject {
  params: CheckBalanceHigh.ParamsStructOutput;
}
export type _EventToExposeStructInABI__ParamsEvent = TypedEvent<
  [CheckBalanceHigh.ParamsStructOutput],
  _EventToExposeStructInABI__ParamsEventObject
>;

export type _EventToExposeStructInABI__ParamsEventFilter =
  TypedEventFilter<_EventToExposeStructInABI__ParamsEvent>;

export interface CheckBalanceHigh extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: CheckBalanceHighInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    check(
      _params: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;
  };

  check(
    _params: PromiseOrValue<BytesLike>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  callStatic: {
    check(
      _params: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<boolean>;
  };

  filters: {
    "_EventToExposeStructInABI__Params(tuple)"(
      params?: null
    ): _EventToExposeStructInABI__ParamsEventFilter;
    _EventToExposeStructInABI__Params(
      params?: null
    ): _EventToExposeStructInABI__ParamsEventFilter;
  };

  estimateGas: {
    check(
      _params: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    check(
      _params: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
