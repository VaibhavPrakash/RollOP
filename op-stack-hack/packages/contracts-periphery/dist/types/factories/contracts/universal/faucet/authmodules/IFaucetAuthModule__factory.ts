/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IFaucetAuthModule,
  IFaucetAuthModuleInterface,
} from "../../../../../contracts/universal/faucet/authmodules/IFaucetAuthModule";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "nonce",
            type: "bytes32",
          },
        ],
        internalType: "struct Faucet.DripParameters",
        name: "_params",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_proof",
        type: "bytes",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class IFaucetAuthModule__factory {
  static readonly abi = _abi;
  static createInterface(): IFaucetAuthModuleInterface {
    return new utils.Interface(_abi) as IFaucetAuthModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IFaucetAuthModule {
    return new Contract(address, _abi, signerOrProvider) as IFaucetAuthModule;
  }
}
