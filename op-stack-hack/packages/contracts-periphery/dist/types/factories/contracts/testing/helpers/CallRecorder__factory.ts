/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  CallRecorder,
  CallRecorderInterface,
} from "../../../../contracts/testing/helpers/CallRecorder";

const _abi = [
  {
    inputs: [],
    name: "lastCall",
    outputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "gas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "record",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061041e806100206000396000f3fe6080604052600436106100295760003560e01c8063266cf1091461002e578063da516aa914610038575b600080fd5b610036610066565b005b34801561004457600080fd5b5061004d6100aa565b60405161005d9493929190610164565b60405180910390f35b600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000163317815560019061009f903690836102cd565b505a60025534600355565b600080546001805473ffffffffffffffffffffffffffffffffffffffff90921692916100d59061022b565b80601f01602080910402602001604051908101604052809291908181526020018280546101019061022b565b801561014e5780601f106101235761010080835404028352916020019161014e565b820191906000526020600020905b81548152906001019060200180831161013157829003601f168201915b5050505050908060020154908060030154905084565b73ffffffffffffffffffffffffffffffffffffffff8516815260006020608081840152855180608085015260005b818110156101ae5787810183015185820160a001528201610192565b50600060a0828601015260a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505083604083015282606083015295945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600181811c9082168061023f57607f821691505b602082108103610278577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f8211156102c857600081815260208120601f850160051c810160208610156102a55750805b601f850160051c820191505b818110156102c4578281556001016102b1565b5050505b505050565b67ffffffffffffffff8311156102e5576102e56101fc565b6102f9836102f3835461022b565b8361027e565b6000601f84116001811461034b57600085156103155750838201355b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600387901b1c1916600186901b1783556103e1565b6000838152602090207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0861690835b8281101561039a578685013582556020948501946001909201910161037a565b50868210156103d5577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88860031b161c19848701351681555b505060018560011b0183555b505050505056fea26469706673582212208d90459c27e08ef3df588c77a1a6723cc7982f48e840434f30ae30ef814de01264736f6c63430008100033";

type CallRecorderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CallRecorderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CallRecorder__factory extends ContractFactory {
  constructor(...args: CallRecorderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CallRecorder> {
    return super.deploy(overrides || {}) as Promise<CallRecorder>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CallRecorder {
    return super.attach(address) as CallRecorder;
  }
  override connect(signer: Signer): CallRecorder__factory {
    return super.connect(signer) as CallRecorder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CallRecorderInterface {
    return new utils.Interface(_abi) as CallRecorderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CallRecorder {
    return new Contract(address, _abi, signerOrProvider) as CallRecorder;
  }
}
