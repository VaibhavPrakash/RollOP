/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "AddressManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AddressManager__factory>;
    getContractFactory(
      name: "IL1ChugSplashDeployer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IL1ChugSplashDeployer__factory>;
    getContractFactory(
      name: "L1ChugSplashProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.L1ChugSplashProxy__factory>;
    getContractFactory(
      name: "Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Proxy__factory>;
    getContractFactory(
      name: "IStaticERC1967Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStaticERC1967Proxy__factory>;
    getContractFactory(
      name: "IStaticL1ChugSplashProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStaticL1ChugSplashProxy__factory>;
    getContractFactory(
      name: "ProxyAdmin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ProxyAdmin__factory>;
    getContractFactory(
      name: "Semver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Semver__factory>;
    getContractFactory(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Initializable__factory>;
    getContractFactory(
      name: "ERC721Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Upgradeable__factory>;
    getContractFactory(
      name: "ERC721BurnableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721BurnableUpgradeable__factory>;
    getContractFactory(
      name: "IERC721MetadataUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721MetadataUpgradeable__factory>;
    getContractFactory(
      name: "IERC721ReceiverUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721ReceiverUpgradeable__factory>;
    getContractFactory(
      name: "IERC721Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Upgradeable__factory>;
    getContractFactory(
      name: "ContextUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContextUpgradeable__factory>;
    getContractFactory(
      name: "EIP712Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EIP712Upgradeable__factory>;
    getContractFactory(
      name: "ERC165Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165Upgradeable__factory>;
    getContractFactory(
      name: "IERC165Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165Upgradeable__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "IERC1271",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1271__factory>;
    getContractFactory(
      name: "Owned",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Owned__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "ERC721TokenReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721TokenReceiver__factory>;
    getContractFactory(
      name: "CallRecorder",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CallRecorder__factory>;
    getContractFactory(
      name: "FailingReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FailingReceiver__factory>;
    getContractFactory(
      name: "FaucetHelper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FaucetHelper__factory>;
    getContractFactory(
      name: "OptimistInviterHelper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OptimistInviterHelper__factory>;
    getContractFactory(
      name: "Reverter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Reverter__factory>;
    getContractFactory(
      name: "SimpleStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SimpleStorage__factory>;
    getContractFactory(
      name: "TestERC1271Wallet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestERC1271Wallet__factory>;
    getContractFactory(
      name: "TestERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestERC20__factory>;
    getContractFactory(
      name: "TestERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestERC721__factory>;
    getContractFactory(
      name: "AssetReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AssetReceiver__factory>;
    getContractFactory(
      name: "CheckBalanceHigh",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CheckBalanceHigh__factory>;
    getContractFactory(
      name: "CheckBalanceLow",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CheckBalanceLow__factory>;
    getContractFactory(
      name: "CheckGelatoLow",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CheckGelatoLow__factory>;
    getContractFactory(
      name: "IGelatoTreasury",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGelatoTreasury__factory>;
    getContractFactory(
      name: "CheckTrue",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CheckTrue__factory>;
    getContractFactory(
      name: "Drippie",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Drippie__factory>;
    getContractFactory(
      name: "IDripCheck",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDripCheck__factory>;
    getContractFactory(
      name: "AdminFaucetAuthModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AdminFaucetAuthModule__factory>;
    getContractFactory(
      name: "IFaucetAuthModule",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFaucetAuthModule__factory>;
    getContractFactory(
      name: "Faucet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Faucet__factory>;
    getContractFactory(
      name: "SafeSend",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeSend__factory>;
    getContractFactory(
      name: "AttestationStation",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AttestationStation__factory>;
    getContractFactory(
      name: "Optimist",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Optimist__factory>;
    getContractFactory(
      name: "OptimistAllowlist",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OptimistAllowlist__factory>;
    getContractFactory(
      name: "OptimistInviter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OptimistInviter__factory>;
    getContractFactory(
      name: "Transactor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Transactor__factory>;

    getContractAt(
      name: "AddressManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AddressManager>;
    getContractAt(
      name: "IL1ChugSplashDeployer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IL1ChugSplashDeployer>;
    getContractAt(
      name: "L1ChugSplashProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.L1ChugSplashProxy>;
    getContractAt(
      name: "Proxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Proxy>;
    getContractAt(
      name: "IStaticERC1967Proxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IStaticERC1967Proxy>;
    getContractAt(
      name: "IStaticL1ChugSplashProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IStaticL1ChugSplashProxy>;
    getContractAt(
      name: "ProxyAdmin",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ProxyAdmin>;
    getContractAt(
      name: "Semver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Semver>;
    getContractAt(
      name: "Initializable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Initializable>;
    getContractAt(
      name: "ERC721Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Upgradeable>;
    getContractAt(
      name: "ERC721BurnableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721BurnableUpgradeable>;
    getContractAt(
      name: "IERC721MetadataUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721MetadataUpgradeable>;
    getContractAt(
      name: "IERC721ReceiverUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721ReceiverUpgradeable>;
    getContractAt(
      name: "IERC721Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Upgradeable>;
    getContractAt(
      name: "ContextUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ContextUpgradeable>;
    getContractAt(
      name: "EIP712Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EIP712Upgradeable>;
    getContractAt(
      name: "ERC165Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165Upgradeable>;
    getContractAt(
      name: "IERC165Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165Upgradeable>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "IERC1271",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1271>;
    getContractAt(
      name: "Owned",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Owned>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "ERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "ERC721TokenReceiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721TokenReceiver>;
    getContractAt(
      name: "CallRecorder",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CallRecorder>;
    getContractAt(
      name: "FailingReceiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FailingReceiver>;
    getContractAt(
      name: "FaucetHelper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FaucetHelper>;
    getContractAt(
      name: "OptimistInviterHelper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OptimistInviterHelper>;
    getContractAt(
      name: "Reverter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Reverter>;
    getContractAt(
      name: "SimpleStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SimpleStorage>;
    getContractAt(
      name: "TestERC1271Wallet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestERC1271Wallet>;
    getContractAt(
      name: "TestERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestERC20>;
    getContractAt(
      name: "TestERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestERC721>;
    getContractAt(
      name: "AssetReceiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AssetReceiver>;
    getContractAt(
      name: "CheckBalanceHigh",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CheckBalanceHigh>;
    getContractAt(
      name: "CheckBalanceLow",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CheckBalanceLow>;
    getContractAt(
      name: "CheckGelatoLow",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CheckGelatoLow>;
    getContractAt(
      name: "IGelatoTreasury",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGelatoTreasury>;
    getContractAt(
      name: "CheckTrue",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CheckTrue>;
    getContractAt(
      name: "Drippie",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Drippie>;
    getContractAt(
      name: "IDripCheck",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDripCheck>;
    getContractAt(
      name: "AdminFaucetAuthModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AdminFaucetAuthModule>;
    getContractAt(
      name: "IFaucetAuthModule",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFaucetAuthModule>;
    getContractAt(
      name: "Faucet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Faucet>;
    getContractAt(
      name: "SafeSend",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeSend>;
    getContractAt(
      name: "AttestationStation",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AttestationStation>;
    getContractAt(
      name: "Optimist",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Optimist>;
    getContractAt(
      name: "OptimistAllowlist",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OptimistAllowlist>;
    getContractAt(
      name: "OptimistInviter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OptimistInviter>;
    getContractAt(
      name: "Transactor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Transactor>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
